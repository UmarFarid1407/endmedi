generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   @default("user")
  createdAt DateTime @default(now())

  
  medicines Medicine[]

  
  cartItems Cart[] 

  cart UserCart[]
 
  Profile   Profile?
  
  File    FileMetadata[]
}

model Medicine {
  medicineID                  Int      @id @default(autoincrement())
  medicineName                String
  medicineQuantity            Int
  medicineCategory            String
  priceofonemedicineinTablet  Float
  medicinequantityinonetablet Int?
  mediciinemadeIN             String
  medicineExpiryDate          DateTime
  sellerID                    Int
  medicineManufacturingDate   DateTime
  mgs                         Int?

 
  seller User @relation(fields: [sellerID], references: [id])


}

model Cart {
  id                          Int      @id @default(autoincrement())
  amount                      Int   
  userId                      Int      
  totalAmount                 Int
  medicineID                  Int
  medicineName                String
  medicineQuantity            Int
  medicineCategory            String
  priceofonemedicineinTablet  Float
  medicinequantityinonetablet Int?
  mediciinemadeIN             String
  medicineExpiryDate          DateTime
  sellerID                    Int
  medicineManufacturingDate   DateTime
  mgs                         Int?
  paymentStatus               String   @default("not delivered")
  sessionId                   String   

  // Relations
  user     User     @relation(fields: [userId], references: [id])


  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
}
model UserCart {
  id                          Int      @id @default(autoincrement())
  amount                      Int
  userId                      Int     
  totalAmount                 Int
  medicineID                  Int
  medicineName                String
  medicineQuantity            Int
  medicineCategory            String
  priceofonemedicineinTablet  Float
  medicinequantityinonetablet Int?
  mediciinemadeIN             String
  medicineExpiryDate          DateTime
  sellerID                    Int
  medicineManufacturingDate   DateTime
  mgs                         Int?
  paymentStatus               String   @default("not delivered")
  sessionId                   String   

  // Relations
  user     User     @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now()) 
  updatedAt DateTime @updatedAt 
}

model Profile {
  id          Int    @id @default(autoincrement())
  firstName   String
  middleName  String?
  lastName    String
  gender      String
  phoneNumber String
   email       String
  password    String
  role      String

  userId      Int     @unique

  // Relation to User
  user        User    @relation(fields: [userId], references: [id])

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model FileMetadata {
  id        Int      @id @default(autoincrement())
  filename  String
  fileData  Bytes
  userId    Int
  user      User     @relation(fields: [userId], references: [id]) 
  createdAt DateTime @default(now())

 
}

